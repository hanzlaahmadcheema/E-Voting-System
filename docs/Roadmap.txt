üî• 1. Hanzla Ahmad ‚Äì Core Concepts & System Logic (Lead)
Focus: Architecture, logic flow, feature integration, code quality.

Week 1‚Äì2:
Finalize ERD & class diagrams (high-level only).

Set up GitHub repo + project board.

Define main business logic (voting rules, eligibility, result logic).

Write pseudocode / flowcharts for all system processes.

Week 3‚Äì4:
Implement core controller classes:

ElectionManVoterAge

VoterManVoterAger

ResultProcessor

Coordinate data flow between objects.

Integrate modules from Meeral & Bilawal.

Guide test scenarios & validations with Meeral.

üß± 2. Meeral Nafees ‚Äì Class Development & Validation
Focus: Class skeletons, OOP practice, simple logic.

Week 1‚Äì2:
Create basic model classes:

Voter, City, Constituency, PollingStation, Party

Include:

Constructors

Getters/Setters

toString() methods

Week 3‚Äì4:
Add validation in constructors/setters (e.g., VoterAge >= 18, VoterCNIC format).

Write test cases for each class using mock data.

Assist Hanzla with unit testing integration.

üõ†Ô∏è 3. Bilawal Hussain ‚Äì Database Handling (Full Ownership)
Focus: Database schema, queries, data access layer.

Week 1‚Äì2:
Design relational schema (tables, FKs, PKs).

Create SQL scripts to:

Create tables

Insert dummy data

Setup indexes

Week 3‚Äì4:
Implement DatabaseHandler class:

connect(), disconnect(), executeQuery()

Write DAO (Data Access Objects) for:

VoterDAO, ElectionDAO, VoteDAO, ResultDAO

Coordinate with Hanzla for DB integration.

üß© Cross-Collaboration Rules:
Weekly Code Merge: Every Sunday.

Standup Check-ins: 2x/week (10 mins).

Naming Conventions: Follow unified naming, class/file/packVoterAge format.

Code Reviews: Hanzla to review all major merges.

